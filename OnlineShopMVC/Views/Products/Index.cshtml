@model ProductListViewModel
@{
    ViewData["Title"] = "Product List";
}

<div>
    <h2 class="text-center">@ViewData["Title"]</h2>

    <form method="get">
        <div class="form-inline">
            <label>Type: </label>
            <input name="selectedType" value="@Model.FilterViewModel.SelectedType" class="form-control" />
            <label>Producer: </label>
            <select name="selectedProducer" asp-items="Model.FilterViewModel.Producers" class="form-control"></select>
            <input type="submit" value="Фильтр" class="btn btn-info" />
        </div>
    </form>
    @Html.ActionLink("Add product", "Create", "Products", null, new { @class = "btn btn-success" })

    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("Title", "Index", "Products",
                    new
                         {
                        selectedType = Model.FilterViewModel.SelectedType,
                        selectedProducer = Model.FilterViewModel.SelectedProducer,
                        sortOrder = Model.SortViewModel.TitleSort
                    })
            </th>
            <th>
                @Html.ActionLink("Price", "Index", "Products",
                    new
                         {
                        selectedType = Model.FilterViewModel.SelectedType,
                        selectedProducer = Model.FilterViewModel.SelectedProducer,
                        sortOrder = Model.SortViewModel.PriceSort
                    })
            </th>
            <th>
                @Html.ActionLink("Producer", "Index", "Products",
                    new
                         {
                        selectedType = Model.FilterViewModel.SelectedType,
                        selectedProducer = Model.FilterViewModel.SelectedProducer,
                        sortOrder = Model.SortViewModel.ProducerSort
                    })
            </th>
            <th>
                @Html.ActionLink("Type", "Index", "Products",
                    new
                         {
                        selectedType = Model.FilterViewModel.SelectedType,
                        selectedProducer = Model.FilterViewModel.SelectedProducer,
                        sortOrder = Model.SortViewModel.TypeSort
                    })
            </th>
            <th>
                @Html.ActionLink("Amount", "Index", "Products",
                    new
                         {
                        selectedType = Model.FilterViewModel.SelectedType,
                        selectedProducer = Model.FilterViewModel.SelectedProducer,
                        sortOrder = Model.SortViewModel.AmountSort
                    })
            </th>
            <th></th>
        </tr>
        @foreach (Product product in Model.Products)
        {
            <tr>
                <td>@product.Title</td>
                <td>@product.Price</td>
                <td>@product.Producer</td>
                <td>@product.Type</td>
                <td>@product.Amount</td>
                <td>
                    <form method="post">
                        <a class="btn btn-success" asp-action="Details" asp-route-id="@product.Id">
                            Details
                        </a>
                        <a class="btn btn-info" asp-action="Edit" asp-route-id="@product.Id">
                            Edit
                        </a>
                        <button class="btn btn-danger" type="submit" asp-action="Delete" asp-route-id="@product.Id">
                            Delete
                        </button>
                        <a class="btn btn-info" asp-controller="Orders" asp-action="Create" asp-route-id="@product.Id">
                            Buy
                        </a>
                    </form>
                </td>
            </tr>
        }
    </table>
    @if (Model.PageViewModel.HasPreviousPage)
    {
        @Html.ActionLink("Previous page", "Index", "Products",
            new
            {
                selectedType = Model.FilterViewModel.SelectedType,
                selectedProducer = Model.FilterViewModel.SelectedProducer,
                page = Model.PageViewModel.PageNumber - 1,
                sortOrder = Model.SortViewModel.Current
            },
            new { @class = "btn btn-info" })
    }
    @if (Model.PageViewModel.HasNextPage)
    {
        @Html.ActionLink("Next page", "Index", "Products",
            new
            {
                selectedType = Model.FilterViewModel.SelectedType,
                selectedProducer = Model.FilterViewModel.SelectedProducer,
                page = Model.PageViewModel.PageNumber + 1,
                sortOrder = Model.SortViewModel.Current
            },
            new { @class = "btn btn-info" })
    }
</div>